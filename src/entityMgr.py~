# Entity Manager
# Stores the list of entities that will appear on the map, as well as the actual list of spawned entities

from vector import Vector3

class EntityMgr:
    def __init__(self, engine):
        print "starting ent mgr"
        self.engine = engine
                
    def init(self):
        self.ents = {}
        self.nEnts = 0
        self.projectiles = {}
        self.nProjectiles = 0
        self.obstacles = {}
        self.nObstacles = 0
        import ent
        self.playerType = ent.PlayerShip
        self.escortType = ent.EscortShip
        self.warpGateType = ent.WarpGate
        self.ateroidType = ent.Asteroid
        self.enemyTypes = [ent.EnemyFighter, ent.EnemyFighter, ent.EnemyFighter, ent.EnemyFighter, ent.EnemyFighter, ent.EnemyFighter, ent.EnemyFighter]
        self.projectileTypes = [ent.RailgunProjectile, ent.EnemyProjectile]
        
        self.playerObject = None
        self.escortShip = None

    def createEnt(self, entType, pos = Vector3(0,0,0)):
        ent = entType(self.engine, self.nEnts, pos = pos)
        print "EntMgr created: ", ent.uiname, ent.eid, self.nEnts
        ent.init()
        self.ents[self.nEnts] = ent;
        self.nEnts = self.nEnts + 1
        return ent
        
    def createProjectile(self, entType, pos = Vector3(0,0,0)):
        ent = entType(self.engine, self.nProjectiles, pos = pos)
        ent.init()
        self.projectiles[self.nProjectiles] = ent;
        self.nProjectiles += 1
        return ent
        
    def createObstacle(self, entType, pos = Vector3(0,0,0)):
        ent = entType(self.engine, self.nObstacles, pos = pos)
        ent.init()
        self.obstacles[self.nObstacles] = ent;
        self.nObstacles += 1
        return ent
        
    def getNextProjectile(self, projType):
        for eid, proj in self.projectiles.iteritems():
            if not proj.isActive and proj.projType == projType:
                return proj
        return self.projectiles[0]

    def tick(self, dt):
        for eid, ent in self.ents.iteritems():
            ent.tick(dt)
        for eid, proj in self.projectiles.iteritems():
            proj.tick(dt)
        

